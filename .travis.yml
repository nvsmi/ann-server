# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

language: cpp

sudo: required

compiler:
- clang
- gcc

env:
- TASK=compile-with-bazel
#- TASK=compile-with-cmake

before_script:
- ulimit -c unlimited -S       # enable core dumps
# The real command should be put into another "bash -c" otherwise it
# would cause a permission issue. The reason may be that the 'sudo'
# only promote the 'echo' part but not the whole command.
- sudo bash -c "echo 'core.%e.%p' > /proc/sys/kernel/core_pattern"

before_install:
- sudo apt update && sudo apt install -qqy curl gnupg apt-transport-https
- curl -fsSL https://bazel.build/bazel-release.pub.gpg | gpg --dearmor > bazel.gpg
- sudo mv bazel.gpg /etc/apt/trusted.gpg.d/
- echo "deb [arch=amd64] https://storage.googleapis.com/bazel-apt stable jdk1.8" | sudo tee /etc/apt/sources.list.d/bazel.list
- sudo apt update 
- sudo apt-get install -qqy golang automake bison flex g++ git libboost-all-dev libevent-dev libssl-dev libtool make pkg-config # thrift dependencies
- export GOPATH=$HOME/go && export PATH=$PATH:$GOROOT/bin:$GOPATH/bin
- cd -

install:
- sudo apt-get install -qqy realpath libgflags-dev libprotobuf-dev libprotoc-dev protobuf-compiler libleveldb-dev libgoogle-perftools-dev libboost-dev libssl-dev libevent-dev libboost-test-dev libgoogle-glog-dev
- sudo apt-get install -qqy libgtest-dev && cd /usr/src/gtest && sudo env "PATH=$PATH" cmake . && sudo make && sudo mv libgtest* /usr/lib/ && cd -
- sudo apt-get install -y gdb  # install gdb
# - wget https://mesalink.s3-us-west-1.amazonaws.com/MesaLink-1.0.0-x86_64_trusty.deb && sudo dpkg -i MesaLink-1.0.0-x86_64_trusty.deb # install MesaLink for trusty

script:
- export BAZEL_VERSION=$(cat .bazelversion) && sudo apt-get install -qqy bazel-${BAZEL_VERSION}
- sh +x tools/ci/build_ci.sh
